# Configuration pytest pour les tests ACFC
# =========================================

[tool:pytest]
# Répertoires de tests
testpaths = tests

# Ajout du répertoire racine au PYTHONPATH
pythonpath = .

# Patterns de fichiers de test
python_files = test_*.py

# Options par défaut
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes

# Marqueurs personnalisés
markers =
    unit: Tests unitaires (rapides, sans dépendances)
    integration: Tests d''intégration (avec base de données)
    e2e: Tests end-to-end (scénarios complets utilisateur)
    demo: Tests de démonstration (pour formation/présentation)
    slow: Tests lents (> 1 seconde)
    qrcode: Tests liés à la génération de QR Code
    printing: Tests liés aux fonctionnalités d''impression
    modal: Tests liés aux modales Bootstrap
    security: Tests de sécurité
    performance: Tests de performance
    regression: Tests de régression
    smoke: Tests de base (smoke tests)
    auth: Tests d'authentification
    user: Tests d'utilisateur
    admin: Tests administrateur
    database: Tests nécessitant une base de données
    auth: Tests d''authentification
    user: Tests utilisateur
    admin: Tests administrateur
    database: Tests nécessitant une base de données

# Configuration des warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:flask_session

# Timeout par défaut pour les tests
timeout = 300

# Patterns de classes de test
python_classes = Test*

# Patterns de fonctions de test
python_functions = test_*

# Répertoires à ignorer
norecursedirs = 
    .git
    .tox
    __pycache__
    *.egg-info
    dist
    build
    venv
    env

# Configuration de coverage (si pytest-cov est installé)
# addopts = --cov=app_acfc --cov-report=html --cov-report=term

# Variables d'environnement pour les tests
env = 
    TESTING = true
    FLASK_ENV = testing
    DB_HOST = localhost
    DB_USER = test_user
    DB_PASSWORD = test_password
    DB_NAME = test_acfc
