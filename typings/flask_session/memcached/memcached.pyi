"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional, Protocol
from flask import Flask
from ..base import ServerSideSession, ServerSideSessionInterface

class MemcacheClientProtocol(Protocol):
    def get(self, key: str) -> Optional[Any]:
        ...
    
    def set(self, key: str, value: Any, timeout: int) -> bool:
        ...
    
    def delete(self, key: str) -> bool:
        ...
    


class MemcachedSession(ServerSideSession):
    ...


class MemcachedSessionInterface(ServerSideSessionInterface):
    """A Session interface that uses memcached as session storage. (`pylibmc`, `libmc`, `python-memcached` or `pymemcache` required)

    :param client: A ``memcache.Client`` instance.
    :param key_prefix: A prefix that is added to all storage keys.
    :param use_signer: Whether to sign the session id cookie or not.
    :param permanent: Whether to use permanent session or not.
    :param sid_length: The length of the generated session id in bytes.
    :param serialization_format: The serialization format to use for the session data.

    .. versionadded:: 0.7
        The `serialization_format` and `app` parameters were added.

    .. versionadded:: 0.6
        The `sid_length` parameter was added.

    .. versionadded:: 0.2
        The `use_signer` parameter was added.
    """
    serializer = ...
    session_class = MemcachedSession
    ttl = ...
    def __init__(self, app: Flask, client: Optional[MemcacheClientProtocol] = ..., key_prefix: str = ..., use_signer: bool = ..., permanent: bool = ..., sid_length: int = ..., serialization_format: str = ...) -> None:
        ...
    


